<?php

namespace {{namespace}};

use Redirect;
use {{rootNamespace}}Http\Requests;
use {{rootNamespace}}Models\{{model}};
use Illuminate\Http\Request;
use {{contractNamespace}}\{{contract}};
use {{rootNamespace}}Http\Controllers\Admin\AdminController;

class {{class}} extends AdminController
{
    /**
     * The {{contract}} instance.
     *
     * @var {{contractNamespace}}\{{contract}}
     */
    protected ${{resourceLowercase}};

    /**
     * {{contract}} constructor.
     * @param {{contract}} ${{resourceLowercase}}
     */
    public function __construct({{contract}} ${{resourceLowercase}})
    {
        $this->{{resourceLowercase}} = ${{resourceLowercase}};
    }

	/**
	 * Display a listing of {{resource}}.
	 *
	 * @return Response
	 */
	public function index()
	{
		save_resource_url();

		return $this->view('{{viewPath}}.index')->with('items', {{model}}::all());
	}

	/**
	 * Show the form for creating a new {{resource}}.
	 *
	 * @return Response
	 */
	public function create()
	{
		return $this->view('{{viewPath}}.create_edit');
	}

	/**
	 * Store a newly created {{resource}} in storage.
	 *
	 * @param Request $request
	 * @return Response
	 */
	public function store(Request $request)
	{
		$this->validate($request, {{model}}::$rules, {{model}}::$messages);

        $this->createEntry({{model}}::class, $request->all());

        return redirect_to_resource();
	}

	/**
	 * Display the specified {{resource}}.
	 *
	 * @param {{model}} ${{resource}}
	 * @return Response
	 */
	public function show({{model}} ${{resource}})
	{
		return $this->view('{{viewPath}}.show')->with('item', ${{resource}});
	}

	/**
	 * Show the form for editing the specified {{resource}}.
	 *
	 * @param {{model}} ${{resource}}
     * @return Response
     */
    public function edit({{model}} ${{resource}})
	{
		return $this->view('{{viewPath}}.create_edit')->with('item', ${{resource}});
	}

	/**
	 * Update the specified {{resource}} in storage.
	 *
	 * @param {{model}}  ${{resource}}
     * @param Request    $request
     * @return Response
     */
    public function update({{model}} ${{resource}}, Request $request)
	{
		$this->validate($request, {{model}}::$rules, {{model}}::$messages);

        $this->updateEntry(${{resource}}, $request->all());

        return redirect_to_resource();
	}

	/**
	 * Remove the specified {{resource}} from storage.
	 *
	 * @param {{model}}  ${{resource}}
     * @param Request    $request
	 * @return Response
	 */
	public function destroy({{model}} ${{resource}}, Request $request)
	{
		$this->deleteEntry(${{resource}}, $request);

        return redirect_to_resource();
	}
}
